diff -Naru dde-daemon-3.2.8/appearance/manager.go dde-daemon-3.2.8_new/appearance/manager.go
--- dde-daemon-3.2.8/appearance/manager.go	2017-12-13 06:37:57.000000000 +0100
+++ dde-daemon-3.2.8_new/appearance/manager.go	2018-01-07 02:00:20.902393154 +0100
@@ -20,13 +20,17 @@
 package appearance
 
 import (
-	"dbus/com/deepin/daemon/accounts"
-	"dbus/com/deepin/wm"
 	"encoding/json"
 	"fmt"
-	"gir/gio-2.0"
 	"io/ioutil"
 	"os/user"
+	"strconv"
+	"time"
+
+	"dbus/com/deepin/daemon/accounts"
+	"dbus/com/deepin/wm"
+
+	"gir/gio-2.0"
 	"pkg.deepin.io/dde/api/theme_thumb"
 	"pkg.deepin.io/dde/daemon/appearance/background"
 	"pkg.deepin.io/dde/daemon/appearance/fonts"
@@ -35,8 +39,6 @@
 	"pkg.deepin.io/lib/dbus/property"
 	"pkg.deepin.io/lib/fsnotify"
 	dutils "pkg.deepin.io/lib/utils"
-	"strconv"
-	"time"
 )
 
 // The supported types
@@ -88,7 +90,8 @@
 	// Theme list refreshed
 	Refreshed func(_type string)
 
-	userObj *accounts.User
+	userObj   *accounts.User
+	imageBlur *accounts.ImageBlur
 
 	setting        *gio.Settings
 	wrapBgSetting  *gio.Settings
@@ -165,6 +168,11 @@
 		m.userObj = nil
 	}
 
+	if m.imageBlur != nil {
+		accounts.DestroyImageBlur(m.imageBlur)
+		m.imageBlur = nil
+	}
+
 	if m.watcher != nil {
 		close(m.endWatcher)
 		m.watcher.Close()
@@ -251,6 +259,12 @@
 		}
 	}
 
+	m.imageBlur, err = accounts.NewImageBlur("com.deepin.daemon.Accounts",
+		"/com/deepin/daemon/ImageBlur")
+	if err != nil {
+		logger.Warning("new imageBlur failed:", err)
+	}
+
 	m.wm, err = wm.NewWm("com.deepin.wm", "/com/deepin/wm")
 	if err != nil {
 		logger.Warning("new wm failed:", err)
@@ -354,8 +368,12 @@
 		m.wm.ChangeCurrentWorkspaceBackground(uri)
 	}
 
-	if m.userObj != nil {
-		m.userObj.SetBackgroundFile(uri)
+	if m.imageBlur != nil {
+		file := dutils.DecodeURI(uri)
+		_, err = m.imageBlur.Get(file)
+		if err != nil {
+			logger.Warning("call imageBlur.Get err:", err)
+		}
 	}
 	return uri, nil
 }
@@ -442,3 +460,12 @@
 		[]string{key}, []string{value})
 	return saveDQtTheme(dQtFile)
 }
+
+func (m *Manager) setDesktopBackgrounds(val []string) {
+	if m.userObj != nil {
+		err := m.userObj.SetDesktopBackgrounds(val)
+		if err != nil {
+			logger.Warning("call userObj.SetDesktopBackgrounds err:", err)
+		}
+	}
+}
